<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="374" onload="init(evt)" viewBox="0 0 1200 374" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="374.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Thread-18</text>
<text id="details" x="10.00" y="357" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="357" > </text>
<g id="frames">
<g >
<title>java.util.Random#&lt;init&gt; (164 microseconds, 0.26%)</title><rect x="414.2" y="197" width="3.1" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="417.25" y="207.5" ></text>
</g>
<g >
<title>java.lang.Object#&lt;init&gt; (10 microseconds, 0.02%)</title><rect x="66.8" y="133" width="0.2" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="69.77" y="143.5" ></text>
</g>
<g >
<title>com.sun.jna.ptr.PointerByReference#setValue (282 microseconds, 0.45%)</title><rect x="1183.1" y="149" width="5.3" height="15.0" fill="rgb(245,149,44)" rx="2" ry="2" />
<text  x="1186.12" y="159.5" ></text>
</g>
<g >
<title>java.util.Arrays#copyOf (101 microseconds, 0.16%)</title><rect x="410.8" y="149" width="1.9" height="15.0" fill="rgb(248,104,47)" rx="2" ry="2" />
<text  x="413.75" y="159.5" ></text>
</g>
<g >
<title>kotlin.LazyKt__LazyJVMKt#lazy (3,148 microseconds, 5.02%)</title><rect x="312.4" y="165" width="59.2" height="15.0" fill="rgb(251,143,51)" rx="2" ry="2" />
<text  x="315.36" y="175.5" >kotlin..</text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.pcollections.IntTree#get (363 microseconds, 0.58%)</title><rect x="1020.5" y="101" width="6.8" height="15.0" fill="rgb(237,143,35)" rx="2" ry="2" />
<text  x="1023.47" y="111.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.pcollections.ConsPStack#size (12 microseconds, 0.02%)</title><rect x="974.3" y="133" width="0.3" height="15.0" fill="rgb(245,143,44)" rx="2" ry="2" />
<text  x="977.33" y="143.5" ></text>
</g>
<g >
<title>java.lang.Object#&lt;init&gt; (23 microseconds, 0.04%)</title><rect x="1176.2" y="53" width="0.4" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="1179.19" y="63.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.pcollections.IntTree#get (46 microseconds, 0.07%)</title><rect x="1026.4" y="85" width="0.9" height="15.0" fill="rgb(237,143,35)" rx="2" ry="2" />
<text  x="1029.43" y="95.5" ></text>
</g>
<g >
<title>kotlin.jvm.internal.Intrinsics#checkNotNullParameter (12 microseconds, 0.02%)</title><rect x="925.8" y="197" width="0.3" height="15.0" fill="rgb(240,143,38)" rx="2" ry="2" />
<text  x="928.84" y="207.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.pcollections.IntTree#get (11 microseconds, 0.02%)</title><rect x="976.4" y="69" width="0.2" height="15.0" fill="rgb(237,143,35)" rx="2" ry="2" />
<text  x="979.42" y="79.5" ></text>
</g>
<g >
<title>all (62,735 microseconds, 100%)</title><rect x="10.0" y="325" width="1180.0" height="15.0" fill="rgb(255,230,55)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>android.widget.CompoundButton#isChecked (14 microseconds, 0.02%)</title><rect x="13.9" y="245" width="0.2" height="15.0" fill="rgb(245,161,44)" rx="2" ry="2" />
<text  x="16.87" y="255.5" ></text>
</g>
<g >
<title>java.lang.System#arraycopy (29 microseconds, 0.05%)</title><rect x="934.3" y="181" width="0.5" height="15.0" fill="rgb(248,104,48)" rx="2" ry="2" />
<text  x="937.29" y="191.5" ></text>
</g>
<g >
<title>androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder#build (57 microseconds, 0.09%)</title><rect x="56.7" y="181" width="1.1" height="15.0" fill="rgb(238,161,37)" rx="2" ry="2" />
<text  x="59.72" y="191.5" ></text>
</g>
<g >
<title>dalvik.system.VMDebug#startMethodTracing (162 microseconds, 0.26%)</title><rect x="10.8" y="213" width="3.1" height="15.0" fill="rgb(243,184,42)" rx="2" ry="2" />
<text  x="13.83" y="223.5" ></text>
</g>
<g >
<title>kotlin.jvm.internal.Intrinsics#checkNotNullExpressionValue (49 microseconds, 0.08%)</title><rect x="1148.1" y="181" width="0.9" height="15.0" fill="rgb(245,143,44)" rx="2" ry="2" />
<text  x="1151.11" y="191.5" ></text>
</g>
<g >
<title>nl.tudelft.trustchain.detoks.TransactionEngineBenchmark#runBenchmark$default (61,761 microseconds, 98.45%)</title><rect x="28.3" y="245" width="1161.7" height="15.0" fill="rgb(228,152,25)" rx="2" ry="2" />
<text  x="31.32" y="255.5" >nl.tudelft.trustchain.detoks.TransactionEngineBenchmark#runBenchmark$default</text>
</g>
<g >
<title>java.util.AbstractList#&lt;init&gt; (123 microseconds, 0.20%)</title><rect x="405.8" y="197" width="2.3" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="408.82" y="207.5" ></text>
</g>
<g >
<title>com.sun.jna.PointerType#getPointer (22 microseconds, 0.04%)</title><rect x="1159.2" y="165" width="0.4" height="15.0" fill="rgb(240,149,38)" rx="2" ry="2" />
<text  x="1162.19" y="175.5" ></text>
</g>
<g >
<title>kotlin.jvm.internal.Intrinsics#checkNotNullParameter (10 microseconds, 0.02%)</title><rect x="1030.7" y="165" width="0.2" height="15.0" fill="rgb(240,143,38)" rx="2" ry="2" />
<text  x="1033.69" y="175.5" ></text>
</g>
<g >
<title>java.lang.String#getBytes (211 microseconds, 0.34%)</title><rect x="1132.5" y="197" width="4.0" height="15.0" fill="rgb(238,104,36)" rx="2" ry="2" />
<text  x="1135.52" y="207.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.pcollections.HashPMap#keyIndexIn (69 microseconds, 0.11%)</title><rect x="1000.9" y="133" width="1.3" height="15.0" fill="rgb(247,143,46)" rx="2" ry="2" />
<text  x="1003.93" y="143.5" ></text>
</g>
<g >
<title>java.nio.charset.Charset#name (11 microseconds, 0.02%)</title><rect x="930.6" y="181" width="0.2" height="15.0" fill="rgb(241,104,40)" rx="2" ry="2" />
<text  x="933.60" y="191.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.pcollections.IntTree#rebalanced (87 microseconds, 0.14%)</title><rect x="1005.5" y="85" width="1.7" height="15.0" fill="rgb(250,143,50)" rx="2" ry="2" />
<text  x="1008.52" y="95.5" ></text>
</g>
<g >
<title>androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder#&lt;init&gt; (42 microseconds, 0.07%)</title><rect x="55.9" y="165" width="0.8" height="15.0" fill="rgb(238,161,37)" rx="2" ry="2" />
<text  x="58.93" y="175.5" ></text>
</g>
<g >
<title>nl.tudelft.ipv8.sqldelight.Database$Companion#getSchema (3,151 microseconds, 5.02%)</title><rect x="952.2" y="213" width="59.3" height="15.0" fill="rgb(228,152,25)" rx="2" ry="2" />
<text  x="955.21" y="223.5" >nl.tud..</text>
</g>
<g >
<title>kotlin.jvm.internal.Intrinsics#checkNotNullParameter (22 microseconds, 0.04%)</title><rect x="1028.1" y="181" width="0.4" height="15.0" fill="rgb(240,143,38)" rx="2" ry="2" />
<text  x="1031.09" y="191.5" ></text>
</g>
<g >
<title>java.util.concurrent.atomic.AtomicLong#&lt;init&gt; (73 microseconds, 0.12%)</title><rect x="416.0" y="181" width="1.3" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="418.96" y="191.5" ></text>
</g>
<g >
<title>java.util.AbstractCollection#&lt;init&gt; (73 microseconds, 0.12%)</title><rect x="406.8" y="181" width="1.3" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="409.76" y="191.5" ></text>
</g>
<g >
<title>nl.tudelft.trustchain.detoks.BenchmarkResult#&lt;init&gt; (62 microseconds, 0.10%)</title><rect x="1188.8" y="213" width="1.2" height="15.0" fill="rgb(238,152,37)" rx="2" ry="2" />
<text  x="1191.83" y="223.5" ></text>
</g>
<g >
<title>nl.tudelft.ipv8.sqldelight.ipv8.DatabaseImpl$Schema#getVersion (13 microseconds, 0.02%)</title><rect x="375.8" y="165" width="0.2" height="15.0" fill="rgb(247,152,46)" rx="2" ry="2" />
<text  x="378.77" y="175.5" ></text>
</g>
<g >
<title>java.lang.String#length (23 microseconds, 0.04%)</title><rect x="1135.2" y="181" width="0.4" height="15.0" fill="rgb(236,104,34)" rx="2" ry="2" />
<text  x="1138.17" y="191.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.KClassImpl#getJClass (11 microseconds, 0.02%)</title><rect x="1016.9" y="149" width="0.2" height="15.0" fill="rgb(240,143,38)" rx="2" ry="2" />
<text  x="1019.90" y="159.5" ></text>
</g>
<g >
<title>java.lang.ref.WeakReference#&lt;init&gt; (132 microseconds, 0.21%)</title><rect x="961.3" y="149" width="2.5" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="964.34" y="159.5" ></text>
</g>
<g >
<title>java.lang.ThreadLocal#&lt;init&gt; (79 microseconds, 0.13%)</title><rect x="310.9" y="165" width="1.5" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="313.87" y="175.5" ></text>
</g>
<g >
<title>com.sun.jna.Memory$LinkedReference#&lt;init&gt; (205 microseconds, 0.33%)</title><rect x="1172.8" y="101" width="3.8" height="15.0" fill="rgb(238,149,37)" rx="2" ry="2" />
<text  x="1175.77" y="111.5" ></text>
</g>
<g >
<title>com.sun.jna.ptr.ByReference#&lt;init&gt; (1,172 microseconds, 1.87%)</title><rect x="1161.1" y="149" width="22.0" height="15.0" fill="rgb(238,149,37)" rx="2" ry="2" />
<text  x="1164.07" y="159.5" >c..</text>
</g>
<g >
<title>java.util.LinkedHashMap#&lt;init&gt; (12,957 microseconds, 20.65%)</title><rect x="67.0" y="133" width="243.7" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="69.95" y="143.5" >java.util.LinkedHashMap#&lt;init&gt;</text>
</g>
<g >
<title>kotlin.jvm.internal.Intrinsics#checkNotNullParameter (34 microseconds, 0.05%)</title><rect x="951.6" y="181" width="0.6" height="15.0" fill="rgb(240,143,38)" rx="2" ry="2" />
<text  x="954.57" y="191.5" ></text>
</g>
<g >
<title>java.util.concurrent.CopyOnWriteArrayList#&lt;init&gt; (398 microseconds, 0.63%)</title><rect x="1036.1" y="133" width="7.5" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="1039.10" y="143.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.pcollections.HashPMap#&lt;init&gt; (150 microseconds, 0.24%)</title><rect x="994.4" y="133" width="2.8" height="15.0" fill="rgb(238,143,37)" rx="2" ry="2" />
<text  x="997.36" y="143.5" ></text>
</g>
<g >
<title>androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper#&lt;init&gt; (56 microseconds, 0.09%)</title><rect x="58.8" y="165" width="1.1" height="15.0" fill="rgb(238,161,37)" rx="2" ry="2" />
<text  x="61.83" y="175.5" ></text>
</g>
<g >
<title>kotlin.jvm.internal.Intrinsics#checkNotNullParameter (45 microseconds, 0.07%)</title><rect x="948.8" y="181" width="0.9" height="15.0" fill="rgb(240,143,38)" rx="2" ry="2" />
<text  x="951.81" y="191.5" ></text>
</g>
<g >
<title>java.lang.Object#&lt;init&gt; (13 microseconds, 0.02%)</title><rect x="1006.9" y="37" width="0.3" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="1009.91" y="47.5" ></text>
</g>
<g >
<title>java.lang.System#arraycopy (45 microseconds, 0.07%)</title><rect x="1147.3" y="165" width="0.8" height="15.0" fill="rgb(248,104,48)" rx="2" ry="2" />
<text  x="1150.27" y="175.5" ></text>
</g>
<g >
<title>java.util.Arrays#copyOf (236 microseconds, 0.38%)</title><rect x="1143.7" y="181" width="4.4" height="15.0" fill="rgb(248,104,47)" rx="2" ry="2" />
<text  x="1146.67" y="191.5" ></text>
</g>
<g >
<title>java.util.concurrent.atomic.AtomicLong#get (2,530 microseconds, 4.03%)</title><rect x="873.4" y="165" width="47.6" height="15.0" fill="rgb(237,104,35)" rx="2" ry="2" />
<text  x="876.44" y="175.5" >java..</text>
</g>
<g >
<title>java.util.HashMap#tableSizeFor (38 microseconds, 0.06%)</title><rect x="310.0" y="101" width="0.7" height="15.0" fill="rgb(239,104,38)" rx="2" ry="2" />
<text  x="312.95" y="111.5" ></text>
</g>
<g >
<title>kotlin.collections.ArraysKt___ArraysJvmKt#plus (765 microseconds, 1.22%)</title><rect x="1136.5" y="197" width="14.4" height="15.0" fill="rgb(238,143,36)" rx="2" ry="2" />
<text  x="1139.49" y="207.5" ></text>
</g>
<g >
<title>com.squareup.sqldelight.TransacterImpl#&lt;init&gt; (59 microseconds, 0.09%)</title><rect x="1032.8" y="149" width="1.2" height="15.0" fill="rgb(238,149,37)" rx="2" ry="2" />
<text  x="1035.85" y="159.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.pcollections.ConsPStack#plus (73 microseconds, 0.12%)</title><rect x="992.4" y="133" width="1.4" height="15.0" fill="rgb(238,143,36)" rx="2" ry="2" />
<text  x="995.43" y="143.5" ></text>
</g>
<g >
<title>java.lang.String#equals (14 microseconds, 0.02%)</title><rect x="1001.7" y="117" width="0.3" height="15.0" fill="rgb(235,104,33)" rx="2" ry="2" />
<text  x="1004.70" y="127.5" ></text>
</g>
<g >
<title>com.sun.jna.Pointer#&lt;init&gt; (70 microseconds, 0.11%)</title><rect x="1177.1" y="117" width="1.3" height="15.0" fill="rgb(238,149,37)" rx="2" ry="2" />
<text  x="1180.06" y="127.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.pcollections.ConsPStack#get (147 microseconds, 0.23%)</title><rect x="984.4" y="117" width="2.8" height="15.0" fill="rgb(237,143,35)" rx="2" ry="2" />
<text  x="987.41" y="127.5" ></text>
</g>
<g >
<title>java.util.concurrent.CopyOnWriteArrayList#setArray (55 microseconds, 0.09%)</title><rect x="1042.6" y="117" width="1.0" height="15.0" fill="rgb(239,104,37)" rx="2" ry="2" />
<text  x="1045.55" y="127.5" ></text>
</g>
<g >
<title>java.lang.Object#&lt;init&gt; (12 microseconds, 0.02%)</title><rect x="40.2" y="181" width="0.2" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="43.21" y="191.5" ></text>
</g>
<g >
<title>nl.tudelft.ipv8.sqldelight.ipv8.DatabaseImpl#getDbBlockQueries (48 microseconds, 0.08%)</title><rect x="926.1" y="197" width="0.9" height="15.0" fill="rgb(237,152,36)" rx="2" ry="2" />
<text  x="929.07" y="207.5" ></text>
</g>
<g >
<title>java.lang.Object#&lt;init&gt; (12 microseconds, 0.02%)</title><rect x="417.1" y="149" width="0.2" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="420.11" y="159.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.pcollections.HashPMap#get (542 microseconds, 0.86%)</title><rect x="1017.1" y="149" width="10.2" height="15.0" fill="rgb(237,143,35)" rx="2" ry="2" />
<text  x="1020.11" y="159.5" ></text>
</g>
<g >
<title>java.lang.ThreadLocal#nextHashCode (34 microseconds, 0.05%)</title><rect x="311.7" y="149" width="0.7" height="15.0" fill="rgb(250,104,49)" rx="2" ry="2" />
<text  x="314.72" y="159.5" ></text>
</g>
<g >
<title>java.lang.Object#&lt;init&gt; (12 microseconds, 0.02%)</title><rect x="969.4" y="117" width="0.2" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="972.39" y="127.5" ></text>
</g>
<g >
<title>nl.tudelft.ipv8.keyvault.LibNaClSK#pub (124 microseconds, 0.20%)</title><rect x="949.9" y="213" width="2.3" height="15.0" fill="rgb(230,152,28)" rx="2" ry="2" />
<text  x="952.88" y="223.5" ></text>
</g>
<g >
<title>kotlin.SynchronizedLazyImpl#&lt;init&gt; (3,102 microseconds, 4.94%)</title><rect x="313.0" y="149" width="58.3" height="15.0" fill="rgb(238,143,37)" rx="2" ry="2" />
<text  x="316.00" y="159.5" >kotlin..</text>
</g>
<g >
<title>com.squareup.sqldelight.internal.FunctionsJvmKt#copyOnWriteList (512 microseconds, 0.82%)</title><rect x="1034.0" y="149" width="9.6" height="15.0" fill="rgb(232,149,30)" rx="2" ry="2" />
<text  x="1036.96" y="159.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.pcollections.IntTree#plus (313 microseconds, 0.50%)</title><rect x="1002.9" y="117" width="5.9" height="15.0" fill="rgb(238,143,36)" rx="2" ry="2" />
<text  x="1005.92" y="127.5" ></text>
</g>
<g >
<title>java.lang.Object#&lt;init&gt; (11 microseconds, 0.02%)</title><rect x="310.7" y="165" width="0.2" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="313.67" y="175.5" ></text>
</g>
<g >
<title>com.sun.jna.Native#setPointer (21 microseconds, 0.03%)</title><rect x="1187.6" y="101" width="0.4" height="15.0" fill="rgb(240,149,38)" rx="2" ry="2" />
<text  x="1190.59" y="111.5" ></text>
</g>
<g >
<title>java.lang.System#nanoTime (27 microseconds, 0.04%)</title><rect x="413.7" y="197" width="0.5" height="15.0" fill="rgb(236,104,34)" rx="2" ry="2" />
<text  x="416.74" y="207.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.pcollections.IntTree#plus (64 microseconds, 0.10%)</title><rect x="1004.3" y="85" width="1.2" height="15.0" fill="rgb(238,143,36)" rx="2" ry="2" />
<text  x="1007.31" y="95.5" ></text>
</g>
<g >
<title>com.sun.jna.PointerType#setPointer (24 microseconds, 0.04%)</title><rect x="1179.6" y="133" width="0.5" height="15.0" fill="rgb(240,149,38)" rx="2" ry="2" />
<text  x="1182.64" y="143.5" ></text>
</g>
<g >
<title>java.nio.charset.Charset#name (24 microseconds, 0.04%)</title><rect x="1135.6" y="181" width="0.5" height="15.0" fill="rgb(241,104,40)" rx="2" ry="2" />
<text  x="1138.60" y="191.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.pcollections.IntTree#&lt;init&gt; (39 microseconds, 0.06%)</title><rect x="1008.1" y="69" width="0.7" height="15.0" fill="rgb(238,143,37)" rx="2" ry="2" />
<text  x="1011.08" y="79.5" ></text>
</g>
<g >
<title>java.lang.ref.FinalizerReference#add (161 microseconds, 0.26%)</title><rect x="1180.1" y="133" width="3.0" height="15.0" fill="rgb(253,104,53)" rx="2" ry="2" />
<text  x="1183.09" y="143.5" ></text>
</g>
<g >
<title>java.lang.Math#min (1,842 microseconds, 2.94%)</title><rect x="492.2" y="197" width="34.6" height="15.0" fill="rgb(247,104,46)" rx="2" ry="2" />
<text  x="495.18" y="207.5" >ja..</text>
</g>
<g >
<title>java.lang.Object#&lt;init&gt; (22 microseconds, 0.04%)</title><rect x="1111.1" y="197" width="0.4" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="1114.13" y="207.5" ></text>
</g>
<g >
<title>nl.tudelft.ipv8.keyvault.LibNaClPK#&lt;init&gt; (101 microseconds, 0.16%)</title><rect x="950.3" y="197" width="1.9" height="15.0" fill="rgb(238,152,37)" rx="2" ry="2" />
<text  x="953.31" y="207.5" ></text>
</g>
<g >
<title>kotlin.jvm.internal.Intrinsics#checkNotNullExpressionValue (13 microseconds, 0.02%)</title><rect x="28.1" y="245" width="0.2" height="15.0" fill="rgb(245,143,44)" rx="2" ry="2" />
<text  x="31.08" y="255.5" ></text>
</g>
<g >
<title>java.util.Random#nextBytes (26,705 microseconds, 42.57%)</title><rect x="418.7" y="213" width="502.3" height="15.0" fill="rgb(238,104,36)" rx="2" ry="2" />
<text  x="421.73" y="223.5" >java.util.Random#nextBytes</text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.pcollections.IntTree#get (13 microseconds, 0.02%)</title><rect x="1027.1" y="69" width="0.2" height="15.0" fill="rgb(237,143,35)" rx="2" ry="2" />
<text  x="1030.06" y="79.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.pcollections.HashPMap#getEntries (110 microseconds, 0.18%)</title><rect x="974.6" y="133" width="2.0" height="15.0" fill="rgb(237,143,36)" rx="2" ry="2" />
<text  x="977.56" y="143.5" ></text>
</g>
<g >
<title>java.lang.Object#&lt;init&gt; (13 microseconds, 0.02%)</title><rect x="415.3" y="181" width="0.2" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="418.28" y="191.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.pcollections.IntTreePMap#&lt;init&gt; (38 microseconds, 0.06%)</title><rect x="1009.3" y="101" width="0.7" height="15.0" fill="rgb(238,143,37)" rx="2" ry="2" />
<text  x="1012.28" y="111.5" ></text>
</g>
<g >
<title>java.lang.String#equals (24 microseconds, 0.04%)</title><rect x="1134.7" y="181" width="0.5" height="15.0" fill="rgb(235,104,33)" rx="2" ry="2" />
<text  x="1137.72" y="191.5" ></text>
</g>
<g >
<title>com.squareup.sqldelight.android.AndroidSqliteDriver#&lt;init&gt; (18,992 microseconds, 30.27%)</title><rect x="40.4" y="213" width="357.3" height="15.0" fill="rgb(238,149,37)" rx="2" ry="2" />
<text  x="43.43" y="223.5" >com.squareup.sqldelight.android.AndroidSqliteDri..</text>
</g>
<g >
<title>java.lang.String#equals (38 microseconds, 0.06%)</title><rect x="1018.3" y="133" width="0.7" height="15.0" fill="rgb(235,104,33)" rx="2" ry="2" />
<text  x="1021.29" y="143.5" ></text>
</g>
<g >
<title>kotlin.jvm.internal.Intrinsics#checkNotNull (11 microseconds, 0.02%)</title><rect x="923.6" y="213" width="0.2" height="15.0" fill="rgb(224,143,21)" rx="2" ry="2" />
<text  x="926.57" y="223.5" ></text>
</g>
<g >
<title>androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder#name (11 microseconds, 0.02%)</title><rect x="58.0" y="181" width="0.2" height="15.0" fill="rgb(241,161,40)" rx="2" ry="2" />
<text  x="61.00" y="191.5" ></text>
</g>
<g >
<title>java.lang.String#equals (25 microseconds, 0.04%)</title><rect x="1114.1" y="181" width="0.4" height="15.0" fill="rgb(235,104,33)" rx="2" ry="2" />
<text  x="1117.07" y="191.5" ></text>
</g>
<g >
<title>nl.tudelft.trustchain.detoks.BasicBlock#sign (3,155 microseconds, 5.03%)</title><rect x="1129.5" y="213" width="59.3" height="15.0" fill="rgb(244,152,43)" rx="2" ry="2" />
<text  x="1132.49" y="223.5" >nl.tud..</text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.KClassCacheKt#getOrCreateKotlinClass (2,930 microseconds, 4.67%)</title><rect x="955.6" y="165" width="55.1" height="15.0" fill="rgb(240,143,38)" rx="2" ry="2" />
<text  x="958.64" y="175.5" >kotli..</text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.pcollections.IntTree#plus (187 microseconds, 0.30%)</title><rect x="1003.6" y="101" width="3.6" height="15.0" fill="rgb(238,143,36)" rx="2" ry="2" />
<text  x="1006.64" y="111.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.KDeclarationContainerImpl#&lt;init&gt; (36 microseconds, 0.06%)</title><rect x="968.9" y="133" width="0.7" height="15.0" fill="rgb(238,143,37)" rx="2" ry="2" />
<text  x="971.93" y="143.5" ></text>
</g>
<g >
<title>java.lang.Thread#run (62,735 microseconds, 100.00%)</title><rect x="10.0" y="309" width="1180.0" height="15.0" fill="rgb(243,104,41)" rx="2" ry="2" />
<text  x="13.00" y="319.5" >java.lang.Thread#run</text>
</g>
<g >
<title>kotlin.jvm.internal.Intrinsics#areEqual (135 microseconds, 0.22%)</title><rect x="921.0" y="213" width="2.6" height="15.0" fill="rgb(224,143,21)" rx="2" ry="2" />
<text  x="924.03" y="223.5" ></text>
</g>
<g >
<title>java.lang.Object#&lt;init&gt; (23 microseconds, 0.04%)</title><rect x="59.4" y="149" width="0.5" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="62.45" y="159.5" ></text>
</g>
<g >
<title>kotlin.jvm.internal.Intrinsics#checkNotNullParameter (22 microseconds, 0.04%)</title><rect x="375.4" y="165" width="0.4" height="15.0" fill="rgb(240,143,38)" rx="2" ry="2" />
<text  x="378.35" y="175.5" ></text>
</g>
<g >
<title>com.sun.jna.Memory#setPointer (193 microseconds, 0.31%)</title><rect x="1184.4" y="133" width="3.6" height="15.0" fill="rgb(240,149,38)" rx="2" ry="2" />
<text  x="1187.36" y="143.5" ></text>
</g>
<g >
<title>java.lang.ref.Reference#&lt;init&gt; (102 microseconds, 0.16%)</title><rect x="961.9" y="133" width="1.9" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="964.90" y="143.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.pcollections.ConsPStack#size (30 microseconds, 0.05%)</title><rect x="993.8" y="133" width="0.6" height="15.0" fill="rgb(245,143,44)" rx="2" ry="2" />
<text  x="996.80" y="143.5" ></text>
</g>
<g >
<title>com.goterl.lazysodium.Sodium#crypto_sign_detached (101 microseconds, 0.16%)</title><rect x="1157.3" y="165" width="1.9" height="15.0" fill="rgb(247,149,46)" rx="2" ry="2" />
<text  x="1160.29" y="175.5" ></text>
</g>
<g >
<title>java.lang.Object#&lt;init&gt; (876 microseconds, 1.40%)</title><rect x="1085.8" y="117" width="16.4" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="1088.76" y="127.5" ></text>
</g>
<g >
<title>com.sun.jna.Memory#access$000 (22 microseconds, 0.04%)</title><rect x="1174.1" y="85" width="0.4" height="15.0" fill="rgb(236,149,34)" rx="2" ry="2" />
<text  x="1177.09" y="95.5" ></text>
</g>
<g >
<title>kotlin.jvm.internal.Intrinsics#checkNotNullParameter (23 microseconds, 0.04%)</title><rect x="1107.2" y="149" width="0.5" height="15.0" fill="rgb(240,143,38)" rx="2" ry="2" />
<text  x="1110.24" y="159.5" ></text>
</g>
<g >
<title>kotlin.collections.ArraysKt___ArraysJvmKt#plus (991 microseconds, 1.58%)</title><rect x="931.0" y="197" width="18.7" height="15.0" fill="rgb(238,143,36)" rx="2" ry="2" />
<text  x="934.02" y="207.5" ></text>
</g>
<g >
<title>androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration#builder (65 microseconds, 0.10%)</title><rect x="55.5" y="181" width="1.2" height="15.0" fill="rgb(243,161,41)" rx="2" ry="2" />
<text  x="58.50" y="191.5" ></text>
</g>
<g >
<title>nl.tudelft.ipv8.sqldelight.ipv8.DatabaseImplKt#getSchema (39 microseconds, 0.06%)</title><rect x="1010.7" y="197" width="0.8" height="15.0" fill="rgb(228,152,25)" rx="2" ry="2" />
<text  x="1013.75" y="207.5" ></text>
</g>
<g >
<title>com.squareup.sqldelight.android.AndroidSqliteDriverKt#access$getDEFAULT_CACHE_SIZE$p (12 microseconds, 0.02%)</title><rect x="397.4" y="197" width="0.3" height="15.0" fill="rgb(241,149,40)" rx="2" ry="2" />
<text  x="400.43" y="207.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.pcollections.IntTree#rebalanced (88 microseconds, 0.14%)</title><rect x="1007.2" y="101" width="1.6" height="15.0" fill="rgb(250,143,50)" rx="2" ry="2" />
<text  x="1010.16" y="111.5" ></text>
</g>
<g >
<title>com.squareup.sqldelight.TransacterImpl#&lt;init&gt; (59 microseconds, 0.09%)</title><rect x="1029.6" y="165" width="1.1" height="15.0" fill="rgb(238,149,37)" rx="2" ry="2" />
<text  x="1032.58" y="175.5" ></text>
</g>
<g >
<title>java.lang.System#arraycopy (11 microseconds, 0.02%)</title><rect x="395.3" y="149" width="0.3" height="15.0" fill="rgb(248,104,48)" rx="2" ry="2" />
<text  x="398.35" y="159.5" ></text>
</g>
<g >
<title>android.util.LruCache#&lt;init&gt; (13,003 microseconds, 20.73%)</title><rect x="66.1" y="149" width="244.6" height="15.0" fill="rgb(238,161,37)" rx="2" ry="2" />
<text  x="69.09" y="159.5" >android.util.LruCache#&lt;init&gt;</text>
</g>
<g >
<title>java.lang.ref.Reference#&lt;init&gt; (68 microseconds, 0.11%)</title><rect x="1175.3" y="69" width="1.3" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="1178.35" y="79.5" ></text>
</g>
<g >
<title>com.sun.jna.PointerType#&lt;init&gt; (67 microseconds, 0.11%)</title><rect x="1178.4" y="133" width="1.2" height="15.0" fill="rgb(238,149,37)" rx="2" ry="2" />
<text  x="1181.38" y="143.5" ></text>
</g>
<g >
<title>java.lang.Math#min (77 microseconds, 0.12%)</title><rect x="936.5" y="165" width="1.4" height="15.0" fill="rgb(247,104,46)" rx="2" ry="2" />
<text  x="939.47" y="175.5" ></text>
</g>
<g >
<title>kotlin.jvm.internal.Intrinsics#checkNotNullParameter (92 microseconds, 0.15%)</title><rect x="1127.8" y="197" width="1.7" height="15.0" fill="rgb(240,143,38)" rx="2" ry="2" />
<text  x="1130.76" y="207.5" ></text>
</g>
<g >
<title>com.sun.jna.Memory#&lt;init&gt; (803 microseconds, 1.28%)</title><rect x="1163.3" y="133" width="15.1" height="15.0" fill="rgb(238,149,37)" rx="2" ry="2" />
<text  x="1166.27" y="143.5" ></text>
</g>
<g >
<title>java.lang.String#hashCode (11 microseconds, 0.02%)</title><rect x="1019.0" y="133" width="0.2" height="15.0" fill="rgb(250,104,49)" rx="2" ry="2" />
<text  x="1022.00" y="143.5" ></text>
</g>
<g >
<title>java.lang.Character#digit (141 microseconds, 0.22%)</title><rect x="23.7" y="213" width="2.6" height="15.0" fill="rgb(233,104,30)" rx="2" ry="2" />
<text  x="26.69" y="223.5" ></text>
</g>
<g >
<title>java.lang.System#arraycopy (12 microseconds, 0.02%)</title><rect x="412.4" y="117" width="0.3" height="15.0" fill="rgb(248,104,48)" rx="2" ry="2" />
<text  x="415.42" y="127.5" ></text>
</g>
<g >
<title>kotlin.jvm.internal.Intrinsics#checkNotNullParameter (22 microseconds, 0.04%)</title><rect x="1188.4" y="181" width="0.4" height="15.0" fill="rgb(240,143,38)" rx="2" ry="2" />
<text  x="1191.42" y="191.5" ></text>
</g>
<g >
<title>java.lang.String#length (26 microseconds, 0.04%)</title><rect x="27.6" y="213" width="0.5" height="15.0" fill="rgb(236,104,34)" rx="2" ry="2" />
<text  x="30.59" y="223.5" ></text>
</g>
<g >
<title>java.lang.ref.FinalizerReference#&lt;init&gt; (113 microseconds, 0.18%)</title><rect x="1181.0" y="117" width="2.1" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="1183.99" y="127.5" ></text>
</g>
<g >
<title>java.lang.Object#&lt;init&gt; (12 microseconds, 0.02%)</title><rect x="370.9" y="117" width="0.2" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="373.91" y="127.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.ReflectProperties$LazyVal#&lt;init&gt; (65 microseconds, 0.10%)</title><rect x="971.1" y="117" width="1.2" height="15.0" fill="rgb(238,143,37)" rx="2" ry="2" />
<text  x="974.12" y="127.5" ></text>
</g>
<g >
<title>java.lang.Integer#parseInt (674 microseconds, 1.07%)</title><rect x="15.4" y="245" width="12.7" height="15.0" fill="rgb(243,104,42)" rx="2" ry="2" />
<text  x="18.40" y="255.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.pcollections.ConsPStack#minus (279 microseconds, 0.44%)</title><rect x="987.2" y="117" width="5.2" height="15.0" fill="rgb(237,143,35)" rx="2" ry="2" />
<text  x="990.18" y="127.5" ></text>
</g>
<g >
<title>androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder#callback (11 microseconds, 0.02%)</title><rect x="57.8" y="181" width="0.2" height="15.0" fill="rgb(242,161,40)" rx="2" ry="2" />
<text  x="60.79" y="191.5" ></text>
</g>
<g >
<title>java.util.Arrays#copyOf (57 microseconds, 0.09%)</title><rect x="411.6" y="133" width="1.1" height="15.0" fill="rgb(248,104,47)" rx="2" ry="2" />
<text  x="414.58" y="143.5" ></text>
</g>
<g >
<title>kotlin.jvm.internal.Intrinsics#checkNotNullParameter (24 microseconds, 0.04%)</title><rect x="1151.3" y="197" width="0.4" height="15.0" fill="rgb(240,143,38)" rx="2" ry="2" />
<text  x="1154.29" y="207.5" ></text>
</g>
<g >
<title>java.lang.String#length (11 microseconds, 0.02%)</title><rect x="930.4" y="181" width="0.2" height="15.0" fill="rgb(236,104,34)" rx="2" ry="2" />
<text  x="933.39" y="191.5" ></text>
</g>
<g >
<title>com.goterl.lazysodium.LazySodiumAndroid#getSodium (69 microseconds, 0.11%)</title><rect x="1156.0" y="165" width="1.3" height="15.0" fill="rgb(225,149,22)" rx="2" ry="2" />
<text  x="1158.99" y="175.5" ></text>
</g>
<g >
<title>kotlin.SynchronizedLazyImpl#&lt;init&gt; (3,078 microseconds, 4.91%)</title><rect x="313.5" y="133" width="57.8" height="15.0" fill="rgb(238,143,37)" rx="2" ry="2" />
<text  x="316.45" y="143.5" >kotlin..</text>
</g>
<g >
<title>java.lang.Float#isNaN (12 microseconds, 0.02%)</title><rect x="309.1" y="101" width="0.2" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="312.11" y="111.5" ></text>
</g>
<g >
<title>java.util.Arrays#copyOf (1,031 microseconds, 1.64%)</title><rect x="377.8" y="165" width="19.4" height="15.0" fill="rgb(248,104,47)" rx="2" ry="2" />
<text  x="380.76" y="175.5" ></text>
</g>
<g >
<title>kotlin.jvm.internal.Intrinsics#checkNotNullParameter (13 microseconds, 0.02%)</title><rect x="1016.7" y="149" width="0.2" height="15.0" fill="rgb(240,143,38)" rx="2" ry="2" />
<text  x="1019.65" y="159.5" ></text>
</g>
<g >
<title>com.squareup.sqldelight.android.AndroidSqliteDriver$Callback#&lt;init&gt; (128 microseconds, 0.20%)</title><rect x="373.6" y="181" width="2.4" height="15.0" fill="rgb(238,149,37)" rx="2" ry="2" />
<text  x="376.60" y="191.5" ></text>
</g>
<g >
<title>java.lang.Object#&lt;init&gt; (11 microseconds, 0.02%)</title><rect x="311.5" y="149" width="0.2" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="314.51" y="159.5" ></text>
</g>
<g >
<title>java.lang.Math#min (12 microseconds, 0.02%)</title><rect x="395.1" y="149" width="0.2" height="15.0" fill="rgb(247,104,46)" rx="2" ry="2" />
<text  x="398.12" y="159.5" ></text>
</g>
<g >
<title>java.lang.Object#&lt;init&gt; (11 microseconds, 0.02%)</title><rect x="56.5" y="149" width="0.2" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="59.52" y="159.5" ></text>
</g>
<g >
<title>kotlin.jvm.internal.Intrinsics#checkNotNullExpressionValue (22 microseconds, 0.04%)</title><rect x="1150.9" y="197" width="0.4" height="15.0" fill="rgb(245,143,44)" rx="2" ry="2" />
<text  x="1153.88" y="207.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.pcollections.ConsPStack#iterator (94 microseconds, 0.15%)</title><rect x="985.2" y="101" width="1.7" height="15.0" fill="rgb(241,143,39)" rx="2" ry="2" />
<text  x="988.17" y="111.5" ></text>
</g>
<g >
<title>kotlin.jvm.internal.Intrinsics#checkNotNullExpressionValue (12 microseconds, 0.02%)</title><rect x="949.7" y="197" width="0.2" height="15.0" fill="rgb(245,143,44)" rx="2" ry="2" />
<text  x="952.66" y="207.5" ></text>
</g>
<g >
<title>kotlin.jvm.internal.Intrinsics#areEqual (35 microseconds, 0.06%)</title><rect x="1016.0" y="149" width="0.7" height="15.0" fill="rgb(224,143,21)" rx="2" ry="2" />
<text  x="1019.00" y="159.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.KClassImpl#&lt;init&gt; (415 microseconds, 0.66%)</title><rect x="964.5" y="149" width="7.8" height="15.0" fill="rgb(238,143,37)" rx="2" ry="2" />
<text  x="967.53" y="159.5" ></text>
</g>
<g >
<title>java.lang.Math#min (12 microseconds, 0.02%)</title><rect x="412.2" y="117" width="0.2" height="15.0" fill="rgb(247,104,46)" rx="2" ry="2" />
<text  x="415.20" y="127.5" ></text>
</g>
<g >
<title>java.lang.String#hashCode (12 microseconds, 0.02%)</title><rect x="974.1" y="133" width="0.2" height="15.0" fill="rgb(250,104,49)" rx="2" ry="2" />
<text  x="977.11" y="143.5" ></text>
</g>
<g >
<title>java.lang.String#equals (13 microseconds, 0.02%)</title><rect x="992.2" y="85" width="0.2" height="15.0" fill="rgb(235,104,33)" rx="2" ry="2" />
<text  x="995.18" y="95.5" ></text>
</g>
<g >
<title>com.sun.jna.PointerType#getPointer (23 microseconds, 0.04%)</title><rect x="1188.0" y="133" width="0.4" height="15.0" fill="rgb(240,149,38)" rx="2" ry="2" />
<text  x="1190.99" y="143.5" ></text>
</g>
<g >
<title>androidx.fragment.app.FragmentHostCallback#getContext (14 microseconds, 0.02%)</title><rect x="15.1" y="213" width="0.3" height="15.0" fill="rgb(230,161,27)" rx="2" ry="2" />
<text  x="18.13" y="223.5" ></text>
</g>
<g >
<title>java.lang.Object#&lt;init&gt; (11 microseconds, 0.02%)</title><rect x="968.7" y="101" width="0.2" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="971.73" y="111.5" ></text>
</g>
<g >
<title>kotlin.jvm.internal.Intrinsics#checkNotNullParameter (13 microseconds, 0.02%)</title><rect x="1011.2" y="181" width="0.3" height="15.0" fill="rgb(240,143,38)" rx="2" ry="2" />
<text  x="1014.24" y="191.5" ></text>
</g>
<g >
<title>kotlin.jvm.internal.Intrinsics#checkNotNullParameter (13 microseconds, 0.02%)</title><rect x="1030.4" y="149" width="0.3" height="15.0" fill="rgb(240,143,38)" rx="2" ry="2" />
<text  x="1033.44" y="159.5" ></text>
</g>
<g >
<title>java.lang.Math#min (48 microseconds, 0.08%)</title><rect x="1146.4" y="165" width="0.9" height="15.0" fill="rgb(247,104,46)" rx="2" ry="2" />
<text  x="1149.36" y="175.5" ></text>
</g>
<g >
<title>kotlin.jvm.internal.Lambda#&lt;init&gt; (35 microseconds, 0.06%)</title><rect x="968.3" y="117" width="0.6" height="15.0" fill="rgb(238,143,37)" rx="2" ry="2" />
<text  x="971.28" y="127.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.KClassImpl$data$1#&lt;init&gt; (62 microseconds, 0.10%)</title><rect x="967.8" y="133" width="1.1" height="15.0" fill="rgb(238,143,37)" rx="2" ry="2" />
<text  x="970.77" y="143.5" ></text>
</g>
<g >
<title>java.lang.String#hashCode (29 microseconds, 0.05%)</title><rect x="982.4" y="133" width="0.5" height="15.0" fill="rgb(250,104,49)" rx="2" ry="2" />
<text  x="985.38" y="143.5" ></text>
</g>
<g >
<title>kotlin.jvm.internal.Reflection#getOrCreateKotlinClass (780 microseconds, 1.24%)</title><rect x="1012.6" y="197" width="14.7" height="15.0" fill="rgb(240,143,38)" rx="2" ry="2" />
<text  x="1015.63" y="207.5" ></text>
</g>
<g >
<title>java.lang.String#charAt (66 microseconds, 0.11%)</title><rect x="26.3" y="213" width="1.3" height="15.0" fill="rgb(229,104,26)" rx="2" ry="2" />
<text  x="29.35" y="223.5" ></text>
</g>
<g >
<title>java.util.Random#&lt;init&gt; (323 microseconds, 0.51%)</title><rect x="412.7" y="213" width="6.0" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="415.65" y="223.5" ></text>
</g>
<g >
<title>java.lang.Object#&lt;init&gt; (11 microseconds, 0.02%)</title><rect x="951.4" y="181" width="0.2" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="954.37" y="191.5" ></text>
</g>
<g >
<title>java.util.ArrayList#add (240 microseconds, 0.38%)</title><rect x="408.1" y="213" width="4.6" height="15.0" fill="rgb(253,104,53)" rx="2" ry="2" />
<text  x="411.14" y="223.5" ></text>
</g>
<g >
<title>java.lang.Object#&lt;init&gt; (22 microseconds, 0.04%)</title><rect x="1178.0" y="101" width="0.4" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="1180.96" y="111.5" ></text>
</g>
<g >
<title>nl.tudelft.ipv8.sqldelight.ipv8.DatabaseImplKt#newInstance (4,273 microseconds, 6.81%)</title><rect x="1027.3" y="197" width="80.4" height="15.0" fill="rgb(251,152,51)" rx="2" ry="2" />
<text  x="1030.30" y="207.5" >nl.tudelf..</text>
</g>
<g >
<title>java.lang.System#arraycopy (44 microseconds, 0.07%)</title><rect x="1142.8" y="181" width="0.9" height="15.0" fill="rgb(248,104,48)" rx="2" ry="2" />
<text  x="1145.85" y="191.5" ></text>
</g>
<g >
<title>kotlin.jvm.internal.Intrinsics#checkNotNullExpressionValue (311 microseconds, 0.50%)</title><rect x="943.0" y="181" width="5.8" height="15.0" fill="rgb(245,143,44)" rx="2" ry="2" />
<text  x="945.96" y="191.5" ></text>
</g>
<g >
<title>android.os.Debug#startMethodTracing (206 microseconds, 0.33%)</title><rect x="10.0" y="245" width="3.9" height="15.0" fill="rgb(243,161,42)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.pcollections.ConsPStack#size (12 microseconds, 0.02%)</title><rect x="1019.2" y="133" width="0.2" height="15.0" fill="rgb(245,143,44)" rx="2" ry="2" />
<text  x="1022.21" y="143.5" ></text>
</g>
<g >
<title>java.util.Arrays#copyOf (432 microseconds, 0.69%)</title><rect x="934.8" y="181" width="8.2" height="15.0" fill="rgb(248,104,47)" rx="2" ry="2" />
<text  x="937.83" y="191.5" ></text>
</g>
<g >
<title>java.lang.Object#&lt;init&gt; (13 microseconds, 0.02%)</title><rect x="1010.5" y="117" width="0.2" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="1013.50" y="127.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.pcollections.MapEntry#equals (63 microseconds, 0.10%)</title><rect x="991.2" y="101" width="1.2" height="15.0" fill="rgb(235,143,33)" rx="2" ry="2" />
<text  x="994.24" y="111.5" ></text>
</g>
<g >
<title>com.sun.jna.Memory#access$102 (23 microseconds, 0.04%)</title><rect x="1172.3" y="101" width="0.5" height="15.0" fill="rgb(249,149,49)" rx="2" ry="2" />
<text  x="1175.34" y="111.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.pcollections.IntTreePMap#get (87 microseconds, 0.14%)</title><rect x="975.0" y="117" width="1.6" height="15.0" fill="rgb(237,143,35)" rx="2" ry="2" />
<text  x="977.99" y="127.5" ></text>
</g>
<g >
<title>com.squareup.sqldelight.android.AndroidSqliteDriver$database$2#&lt;init&gt; (80 microseconds, 0.13%)</title><rect x="64.2" y="165" width="1.5" height="15.0" fill="rgb(238,149,37)" rx="2" ry="2" />
<text  x="67.15" y="175.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.pcollections.HashPMap#getEntries (199 microseconds, 0.32%)</title><rect x="997.2" y="133" width="3.7" height="15.0" fill="rgb(237,143,36)" rx="2" ry="2" />
<text  x="1000.19" y="143.5" ></text>
</g>
<g >
<title>java.lang.Object#&lt;init&gt; (116 microseconds, 0.18%)</title><rect x="1040.4" y="117" width="2.2" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="1043.37" y="127.5" ></text>
</g>
<g >
<title>java.util.concurrent.CopyOnWriteArrayList#&lt;init&gt; (2,277 microseconds, 3.63%)</title><rect x="1064.4" y="133" width="42.8" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="1067.41" y="143.5" >java..</text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.pcollections.IntTree#get (77 microseconds, 0.12%)</title><rect x="999.5" y="101" width="1.4" height="15.0" fill="rgb(237,143,35)" rx="2" ry="2" />
<text  x="1002.48" y="111.5" ></text>
</g>
<g >
<title>java.lang.Object#equals (13 microseconds, 0.02%)</title><rect x="991.9" y="85" width="0.3" height="15.0" fill="rgb(235,104,33)" rx="2" ry="2" />
<text  x="994.94" y="95.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.pcollections.IntTreePMap#plus (413 microseconds, 0.66%)</title><rect x="1002.2" y="133" width="7.8" height="15.0" fill="rgb(238,143,36)" rx="2" ry="2" />
<text  x="1005.23" y="143.5" ></text>
</g>
<g >
<title>com.sun.jna.Native#malloc (23 microseconds, 0.04%)</title><rect x="1165.9" y="101" width="0.4" height="15.0" fill="rgb(238,149,36)" rx="2" ry="2" />
<text  x="1168.89" y="111.5" ></text>
</g>
<g >
<title>kotlin.jvm.internal.Intrinsics#checkNotNullParameter (11 microseconds, 0.02%)</title><rect x="1189.8" y="197" width="0.2" height="15.0" fill="rgb(240,143,38)" rx="2" ry="2" />
<text  x="1192.79" y="207.5" ></text>
</g>
<g >
<title>java.lang.System#nanoTime (389 microseconds, 0.62%)</title><rect x="397.7" y="213" width="7.3" height="15.0" fill="rgb(236,104,34)" rx="2" ry="2" />
<text  x="400.66" y="223.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.pcollections.ConsPStack#subList (14 microseconds, 0.02%)</title><rect x="985.9" y="85" width="0.3" height="15.0" fill="rgb(232,143,30)" rx="2" ry="2" />
<text  x="988.92" y="95.5" ></text>
</g>
<g >
<title>java.lang.Class#getName (13 microseconds, 0.02%)</title><rect x="1015.1" y="149" width="0.2" height="15.0" fill="rgb(241,104,40)" rx="2" ry="2" />
<text  x="1018.07" y="159.5" ></text>
</g>
<g >
<title>androidx.sqlite.db.framework.FrameworkSQLiteOpenHelperFactory#create (78 microseconds, 0.12%)</title><rect x="58.4" y="181" width="1.5" height="15.0" fill="rgb(245,161,45)" rx="2" ry="2" />
<text  x="61.42" y="191.5" ></text>
</g>
<g >
<title>com.sun.jna.Memory$LinkedReference#track (571 microseconds, 0.91%)</title><rect x="1166.3" y="117" width="10.8" height="15.0" fill="rgb(242,149,40)" rx="2" ry="2" />
<text  x="1169.32" y="127.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.pcollections.IntTreePMap#withRoot (63 microseconds, 0.10%)</title><rect x="1008.8" y="117" width="1.2" height="15.0" fill="rgb(241,143,39)" rx="2" ry="2" />
<text  x="1011.81" y="127.5" ></text>
</g>
<g >
<title>java.util.concurrent.atomic.AtomicLong#get (15 microseconds, 0.02%)</title><rect x="418.4" y="181" width="0.3" height="15.0" fill="rgb(237,104,35)" rx="2" ry="2" />
<text  x="421.44" y="191.5" ></text>
</g>
<g >
<title>java.lang.Object#equals (11 microseconds, 0.02%)</title><rect x="1016.4" y="133" width="0.3" height="15.0" fill="rgb(235,104,33)" rx="2" ry="2" />
<text  x="1019.45" y="143.5" ></text>
</g>
<g >
<title>java.lang.Object#&lt;init&gt; (12 microseconds, 0.02%)</title><rect x="1009.8" y="85" width="0.2" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="1012.77" y="95.5" ></text>
</g>
<g >
<title>kotlin.jvm.internal.Intrinsics#checkNotNullParameter (98 microseconds, 0.16%)</title><rect x="1149.0" y="181" width="1.9" height="15.0" fill="rgb(240,143,38)" rx="2" ry="2" />
<text  x="1152.03" y="191.5" ></text>
</g>
<g >
<title>java.lang.Object#&lt;init&gt; (24 microseconds, 0.04%)</title><rect x="407.7" y="165" width="0.4" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="410.68" y="175.5" ></text>
</g>
<g >
<title>libcore.util.CharsetUtils#toUtf8Bytes (23 microseconds, 0.04%)</title><rect x="1136.1" y="181" width="0.4" height="15.0" fill="rgb(238,129,36)" rx="2" ry="2" />
<text  x="1139.05" y="191.5" ></text>
</g>
<g >
<title>java.lang.String#getBytes (830 microseconds, 1.32%)</title><rect x="1111.5" y="197" width="15.7" height="15.0" fill="rgb(238,104,36)" rx="2" ry="2" />
<text  x="1114.55" y="207.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.pcollections.ConsPStack$Itr#next (13 microseconds, 0.02%)</title><rect x="986.9" y="101" width="0.3" height="15.0" fill="rgb(230,143,27)" rx="2" ry="2" />
<text  x="989.94" y="111.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.pcollections.IntTree#rebalanced (63 microseconds, 0.10%)</title><rect x="1007.6" y="85" width="1.2" height="15.0" fill="rgb(250,143,50)" rx="2" ry="2" />
<text  x="1010.63" y="95.5" ></text>
</g>
<g >
<title>android.os.Debug#startMethodTracing (183 microseconds, 0.29%)</title><rect x="10.4" y="229" width="3.5" height="15.0" fill="rgb(243,161,42)" rx="2" ry="2" />
<text  x="13.43" y="239.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.pcollections.ConsPStack$Itr#&lt;init&gt; (40 microseconds, 0.06%)</title><rect x="986.2" y="85" width="0.7" height="15.0" fill="rgb(238,143,37)" rx="2" ry="2" />
<text  x="989.18" y="95.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.ReflectProperties$Val#&lt;init&gt; (36 microseconds, 0.06%)</title><rect x="971.7" y="101" width="0.6" height="15.0" fill="rgb(238,143,37)" rx="2" ry="2" />
<text  x="974.66" y="111.5" ></text>
</g>
<g >
<title>androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder#noBackupDirectory (11 microseconds, 0.02%)</title><rect x="58.2" y="181" width="0.2" height="15.0" fill="rgb(246,161,45)" rx="2" ry="2" />
<text  x="61.21" y="191.5" ></text>
</g>
<g >
<title>com.sun.jna.Pointer#setPointer (66 microseconds, 0.11%)</title><rect x="1186.7" y="117" width="1.3" height="15.0" fill="rgb(240,149,38)" rx="2" ry="2" />
<text  x="1189.75" y="127.5" ></text>
</g>
<g >
<title>nl.tudelft.ipv8.sqldelight.ipv8.DbAttestationQueriesImpl#&lt;init&gt; (702 microseconds, 1.12%)</title><rect x="1030.9" y="165" width="13.2" height="15.0" fill="rgb(238,152,37)" rx="2" ry="2" />
<text  x="1033.87" y="175.5" ></text>
</g>
<g >
<title>java.lang.Object#&lt;init&gt; (14 microseconds, 0.02%)</title><rect x="1008.5" y="53" width="0.3" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="1011.55" y="63.5" ></text>
</g>
<g >
<title>com.sun.jna.Memory#boundsCheck (60 microseconds, 0.10%)</title><rect x="1185.6" y="117" width="1.1" height="15.0" fill="rgb(239,149,37)" rx="2" ry="2" />
<text  x="1188.62" y="127.5" ></text>
</g>
<g >
<title>com.goterl.lazysodium.LazySodiumAndroid#getSodium (23 microseconds, 0.04%)</title><rect x="1156.9" y="149" width="0.4" height="15.0" fill="rgb(225,149,22)" rx="2" ry="2" />
<text  x="1159.86" y="159.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.pcollections.HashPMap#plus (1,814 microseconds, 2.89%)</title><rect x="976.6" y="149" width="34.1" height="15.0" fill="rgb(238,143,36)" rx="2" ry="2" />
<text  x="979.63" y="159.5" >ko..</text>
</g>
<g >
<title>java.util.concurrent.CopyOnWriteArrayList#setArray (266 microseconds, 0.42%)</title><rect x="1102.2" y="117" width="5.0" height="15.0" fill="rgb(239,104,37)" rx="2" ry="2" />
<text  x="1105.24" y="127.5" ></text>
</g>
<g >
<title>java.util.Random#initialScramble (11 microseconds, 0.02%)</title><rect x="415.8" y="181" width="0.2" height="15.0" fill="rgb(241,104,40)" rx="2" ry="2" />
<text  x="418.75" y="191.5" ></text>
</g>
<g >
<title>java.lang.Object#getClass (12 microseconds, 0.02%)</title><rect x="415.5" y="181" width="0.3" height="15.0" fill="rgb(240,104,38)" rx="2" ry="2" />
<text  x="418.53" y="191.5" ></text>
</g>
<g >
<title>kotlin.jvm.internal.Reflection#getOrCreateKotlinClass (2,983 microseconds, 4.75%)</title><rect x="954.6" y="197" width="56.1" height="15.0" fill="rgb(240,143,38)" rx="2" ry="2" />
<text  x="957.64" y="207.5" >kotli..</text>
</g>
<g >
<title>nl.tudelft.ipv8.sqldelight.ipv8.DbBlockQueriesImpl#&lt;init&gt; (3,381 microseconds, 5.39%)</title><rect x="1044.1" y="165" width="63.6" height="15.0" fill="rgb(238,152,37)" rx="2" ry="2" />
<text  x="1047.08" y="175.5" >nl.tud..</text>
</g>
<g >
<title>java.util.AbstractMap#&lt;init&gt; (33 microseconds, 0.05%)</title><rect x="309.3" y="101" width="0.7" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="312.33" y="111.5" ></text>
</g>
<g >
<title>nl.tudelft.trustchain.detoks.BasicBlock#&lt;init&gt; (1,160 microseconds, 1.85%)</title><rect x="1107.7" y="213" width="21.8" height="15.0" fill="rgb(238,152,37)" rx="2" ry="2" />
<text  x="1110.67" y="223.5" >n..</text>
</g>
<g >
<title>kotlin.jvm.internal.Intrinsics#checkNotNullExpressionValue (14 microseconds, 0.02%)</title><rect x="964.0" y="149" width="0.3" height="15.0" fill="rgb(245,143,44)" rx="2" ry="2" />
<text  x="967.04" y="159.5" ></text>
</g>
<g >
<title>java.lang.Object#getClass (44 microseconds, 0.07%)</title><rect x="376.9" y="165" width="0.9" height="15.0" fill="rgb(240,104,38)" rx="2" ry="2" />
<text  x="379.93" y="175.5" ></text>
</g>
<g >
<title>java.lang.Object#&lt;init&gt; (22 microseconds, 0.04%)</title><rect x="1182.7" y="85" width="0.4" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="1185.70" y="95.5" ></text>
</g>
<g >
<title>java.lang.Integer#numberOfLeadingZeros (14 microseconds, 0.02%)</title><rect x="310.4" y="85" width="0.3" height="15.0" fill="rgb(241,104,39)" rx="2" ry="2" />
<text  x="313.40" y="95.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.pcollections.IntTreePMap#get (390 microseconds, 0.62%)</title><rect x="1020.0" y="117" width="7.3" height="15.0" fill="rgb(237,143,35)" rx="2" ry="2" />
<text  x="1022.96" y="127.5" ></text>
</g>
<g >
<title>java.lang.Object#&lt;init&gt; (11 microseconds, 0.02%)</title><rect x="375.1" y="149" width="0.3" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="378.14" y="159.5" ></text>
</g>
<g >
<title>nl.tudelft.ipv8.sqldelight.Database$Companion#invoke (5,114 microseconds, 8.15%)</title><rect x="1011.5" y="213" width="96.2" height="15.0" fill="rgb(242,152,41)" rx="2" ry="2" />
<text  x="1014.48" y="223.5" >nl.tudelft...</text>
</g>
<g >
<title>nl.tudelft.ipv8.sqldelight.ipv8.DatabaseImpl#getDbBlockQueries (25 microseconds, 0.04%)</title><rect x="926.5" y="181" width="0.5" height="15.0" fill="rgb(237,152,36)" rx="2" ry="2" />
<text  x="929.50" y="191.5" ></text>
</g>
<g >
<title>kotlin.jvm.internal.Intrinsics#checkNotNullExpressionValue (32 microseconds, 0.05%)</title><rect x="1127.2" y="197" width="0.6" height="15.0" fill="rgb(245,143,44)" rx="2" ry="2" />
<text  x="1130.16" y="207.5" ></text>
</g>
<g >
<title>java.lang.Object#&lt;init&gt; (10 microseconds, 0.02%)</title><rect x="1030.3" y="149" width="0.1" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="1033.25" y="159.5" ></text>
</g>
<g >
<title>java.lang.String#getBytes (144 microseconds, 0.23%)</title><rect x="928.3" y="197" width="2.7" height="15.0" fill="rgb(238,104,36)" rx="2" ry="2" />
<text  x="931.31" y="207.5" ></text>
</g>
<g >
<title>java.lang.Object#&lt;init&gt; (13 microseconds, 0.02%)</title><rect x="993.6" y="101" width="0.2" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="996.56" y="111.5" ></text>
</g>
<g >
<title>androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration#&lt;init&gt; (34 microseconds, 0.05%)</title><rect x="57.2" y="165" width="0.6" height="15.0" fill="rgb(238,161,37)" rx="2" ry="2" />
<text  x="60.15" y="175.5" ></text>
</g>
<g >
<title>java.lang.ref.Reference#get (36 microseconds, 0.06%)</title><rect x="1015.3" y="149" width="0.7" height="15.0" fill="rgb(237,104,35)" rx="2" ry="2" />
<text  x="1018.32" y="159.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.pcollections.ConsPStack#size (14 microseconds, 0.02%)</title><rect x="1002.0" y="117" width="0.2" height="15.0" fill="rgb(245,143,44)" rx="2" ry="2" />
<text  x="1004.96" y="127.5" ></text>
</g>
<g >
<title>java.lang.Class#isPrimitive (12 microseconds, 0.02%)</title><rect x="396.7" y="117" width="0.3" height="15.0" fill="rgb(238,104,36)" rx="2" ry="2" />
<text  x="399.74" y="127.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.pcollections.IntTree#get (47 microseconds, 0.07%)</title><rect x="1000.0" y="85" width="0.9" height="15.0" fill="rgb(237,143,35)" rx="2" ry="2" />
<text  x="1003.05" y="95.5" ></text>
</g>
<g >
<title>java.lang.Number#&lt;init&gt; (50 microseconds, 0.08%)</title><rect x="416.4" y="165" width="0.9" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="419.39" y="175.5" ></text>
</g>
<g >
<title>java.lang.Object#&lt;init&gt; (11 microseconds, 0.02%)</title><rect x="57.6" y="149" width="0.2" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="60.59" y="159.5" ></text>
</g>
<g >
<title>kotlin.jvm.internal.Intrinsics#checkNotNullParameter (12 microseconds, 0.02%)</title><rect x="371.3" y="149" width="0.3" height="15.0" fill="rgb(240,143,38)" rx="2" ry="2" />
<text  x="374.35" y="159.5" ></text>
</g>
<g >
<title>java.lang.ref.Reference#getReferent (13 microseconds, 0.02%)</title><rect x="1015.8" y="133" width="0.2" height="15.0" fill="rgb(241,104,39)" rx="2" ry="2" />
<text  x="1018.75" y="143.5" ></text>
</g>
<g >
<title>java.lang.Class#getName (64 microseconds, 0.10%)</title><rect x="959.4" y="149" width="1.2" height="15.0" fill="rgb(241,104,40)" rx="2" ry="2" />
<text  x="962.44" y="159.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.pcollections.IntTree#get (17 microseconds, 0.03%)</title><rect x="1000.6" y="69" width="0.3" height="15.0" fill="rgb(237,143,35)" rx="2" ry="2" />
<text  x="1003.61" y="79.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.pcollections.IntTree#get (64 microseconds, 0.10%)</title><rect x="975.4" y="101" width="1.2" height="15.0" fill="rgb(237,143,35)" rx="2" ry="2" />
<text  x="978.42" y="111.5" ></text>
</g>
<g >
<title>kotlin.jvm.internal.Intrinsics#areEqual (12 microseconds, 0.02%)</title><rect x="963.8" y="149" width="0.2" height="15.0" fill="rgb(224,143,21)" rx="2" ry="2" />
<text  x="966.82" y="159.5" ></text>
</g>
<g >
<title>java.util.Random#seedUniquifier (74 microseconds, 0.12%)</title><rect x="417.3" y="197" width="1.4" height="15.0" fill="rgb(239,104,38)" rx="2" ry="2" />
<text  x="420.33" y="207.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.ReflectProperties#lazy (145 microseconds, 0.23%)</title><rect x="969.6" y="133" width="2.7" height="15.0" fill="rgb(251,143,51)" rx="2" ry="2" />
<text  x="972.61" y="143.5" ></text>
</g>
<g >
<title>java.util.concurrent.atomic.AtomicLong#compareAndSet (14 microseconds, 0.02%)</title><rect x="418.2" y="181" width="0.2" height="15.0" fill="rgb(234,104,32)" rx="2" ry="2" />
<text  x="421.18" y="191.5" ></text>
</g>
<g >
<title>com.goterl.lazysodium.LazySodium#cryptoSignDetached (1,881 microseconds, 3.00%)</title><rect x="1153.0" y="181" width="35.4" height="15.0" fill="rgb(247,149,46)" rx="2" ry="2" />
<text  x="1156.04" y="191.5" >co..</text>
</g>
<g >
<title>nl.tudelft.trustchain.detoks.TransactionEngineBenchmark#runBenchmark (61,736 microseconds, 98.41%)</title><rect x="28.8" y="229" width="1161.2" height="15.0" fill="rgb(237,152,35)" rx="2" ry="2" />
<text  x="31.79" y="239.5" >nl.tudelft.trustchain.detoks.TransactionEngineBenchmark#runBenchmark</text>
</g>
<g >
<title>java.lang.Object#&lt;init&gt; (11 microseconds, 0.02%)</title><rect x="972.1" y="85" width="0.2" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="975.13" y="95.5" ></text>
</g>
<g >
<title>nl.tudelft.ipv8.attestation.trustchain.store.TrustChainSQLiteStore#&lt;init&gt; (119 microseconds, 0.19%)</title><rect x="924.7" y="213" width="2.3" height="15.0" fill="rgb(238,152,37)" rx="2" ry="2" />
<text  x="927.73" y="223.5" ></text>
</g>
<g >
<title>java.lang.Object#&lt;init&gt; (13 microseconds, 0.02%)</title><rect x="996.9" y="117" width="0.3" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="999.94" y="127.5" ></text>
</g>
<g >
<title>libcore.util.CharsetUtils#toAsciiBytes (11 microseconds, 0.02%)</title><rect x="930.8" y="181" width="0.2" height="15.0" fill="rgb(238,129,36)" rx="2" ry="2" />
<text  x="933.81" y="191.5" ></text>
</g>
<g >
<title>java.util.ArrayList#add (217 microseconds, 0.35%)</title><rect x="408.6" y="197" width="4.1" height="15.0" fill="rgb(253,104,53)" rx="2" ry="2" />
<text  x="411.57" y="207.5" ></text>
</g>
<g >
<title>nl.tudelft.ipv8.Community#getMyPeer (12 microseconds, 0.02%)</title><rect x="924.3" y="213" width="0.2" height="15.0" fill="rgb(242,152,41)" rx="2" ry="2" />
<text  x="927.28" y="223.5" ></text>
</g>
<g >
<title>java.lang.Object#&lt;init&gt; (12 microseconds, 0.02%)</title><rect x="925.6" y="197" width="0.2" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="928.62" y="207.5" ></text>
</g>
<g >
<title>java.lang.ref.Reference#&lt;init&gt; (73 microseconds, 0.12%)</title><rect x="962.4" y="117" width="1.4" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="965.45" y="127.5" ></text>
</g>
<g >
<title>kotlin.jvm.internal.Lambda#&lt;init&gt; (36 microseconds, 0.06%)</title><rect x="65.0" y="149" width="0.7" height="15.0" fill="rgb(238,143,37)" rx="2" ry="2" />
<text  x="67.98" y="159.5" ></text>
</g>
<g >
<title>java.lang.ref.Reference#getReferent (12 microseconds, 0.02%)</title><rect x="961.1" y="133" width="0.2" height="15.0" fill="rgb(241,104,39)" rx="2" ry="2" />
<text  x="964.11" y="143.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.ReflectionFactoryImpl#getOrCreateKotlinClass (758 microseconds, 1.21%)</title><rect x="1013.0" y="181" width="14.3" height="15.0" fill="rgb(240,143,38)" rx="2" ry="2" />
<text  x="1016.04" y="191.5" ></text>
</g>
<g >
<title>com.sun.jna.Memory#access$100 (68 microseconds, 0.11%)</title><rect x="1171.1" y="101" width="1.2" height="15.0" fill="rgb(235,149,34)" rx="2" ry="2" />
<text  x="1174.06" y="111.5" ></text>
</g>
<g >
<title>kotlin.jvm.internal.Intrinsics#checkNotNullParameter (15 microseconds, 0.02%)</title><rect x="397.2" y="181" width="0.2" height="15.0" fill="rgb(240,143,38)" rx="2" ry="2" />
<text  x="400.15" y="191.5" ></text>
</g>
<g >
<title>java.lang.Integer#parseInt (627 microseconds, 1.00%)</title><rect x="16.3" y="229" width="11.8" height="15.0" fill="rgb(243,104,42)" rx="2" ry="2" />
<text  x="19.28" y="239.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.pcollections.IntTree#rebalanced (62 microseconds, 0.10%)</title><rect x="1006.0" y="69" width="1.2" height="15.0" fill="rgb(250,143,50)" rx="2" ry="2" />
<text  x="1008.99" y="79.5" ></text>
</g>
<g >
<title>java.util.ArrayList#newCapacity (35 microseconds, 0.06%)</title><rect x="410.1" y="149" width="0.7" height="15.0" fill="rgb(240,104,38)" rx="2" ry="2" />
<text  x="413.09" y="159.5" ></text>
</g>
<g >
<title>kotlin.jvm.internal.Intrinsics#checkNotNullParameter (46 microseconds, 0.07%)</title><rect x="371.6" y="181" width="0.8" height="15.0" fill="rgb(240,143,38)" rx="2" ry="2" />
<text  x="374.57" y="191.5" ></text>
</g>
<g >
<title>androidx.fragment.app.Fragment#requireContext (67 microseconds, 0.11%)</title><rect x="14.1" y="245" width="1.3" height="15.0" fill="rgb(230,161,27)" rx="2" ry="2" />
<text  x="17.14" y="255.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.pcollections.HashPMap#get (228 microseconds, 0.36%)</title><rect x="972.3" y="149" width="4.3" height="15.0" fill="rgb(237,143,35)" rx="2" ry="2" />
<text  x="975.34" y="159.5" ></text>
</g>
<g >
<title>com.sun.jna.Memory#malloc (71 microseconds, 0.11%)</title><rect x="1165.0" y="117" width="1.3" height="15.0" fill="rgb(238,149,36)" rx="2" ry="2" />
<text  x="1167.98" y="127.5" ></text>
</g>
<g >
<title>libcore.util.CharsetUtils#toUtf8Bytes (25 microseconds, 0.04%)</title><rect x="1126.7" y="181" width="0.5" height="15.0" fill="rgb(238,129,36)" rx="2" ry="2" />
<text  x="1129.69" y="191.5" ></text>
</g>
<g >
<title>java.lang.Math#max (12 microseconds, 0.02%)</title><rect x="410.5" y="133" width="0.3" height="15.0" fill="rgb(244,104,43)" rx="2" ry="2" />
<text  x="413.52" y="143.5" ></text>
</g>
<g >
<title>java.util.Random#nextInt (20,958 microseconds, 33.41%)</title><rect x="526.8" y="197" width="394.2" height="15.0" fill="rgb(243,104,42)" rx="2" ry="2" />
<text  x="529.82" y="207.5" >java.util.Random#nextInt</text>
</g>
<g >
<title>kotlin.jvm.internal.Intrinsics#checkNotNullParameter (12 microseconds, 0.02%)</title><rect x="964.3" y="149" width="0.2" height="15.0" fill="rgb(240,143,38)" rx="2" ry="2" />
<text  x="967.31" y="159.5" ></text>
</g>
<g >
<title>kotlin.jvm.internal.Intrinsics#checkNotNullParameter (12 microseconds, 0.02%)</title><rect x="967.5" y="133" width="0.3" height="15.0" fill="rgb(240,143,38)" rx="2" ry="2" />
<text  x="970.54" y="143.5" ></text>
</g>
<g >
<title>com.squareup.sqldelight.android.AndroidSqliteDriver$Callback#&lt;init&gt; (1,329 microseconds, 2.12%)</title><rect x="372.4" y="197" width="25.0" height="15.0" fill="rgb(238,149,37)" rx="2" ry="2" />
<text  x="375.44" y="207.5" >c..</text>
</g>
<g >
<title>java.lang.String#equals (14 microseconds, 0.02%)</title><rect x="973.8" y="133" width="0.3" height="15.0" fill="rgb(235,104,33)" rx="2" ry="2" />
<text  x="976.84" y="143.5" ></text>
</g>
<g >
<title>java.lang.String#equals (33 microseconds, 0.05%)</title><rect x="929.8" y="181" width="0.6" height="15.0" fill="rgb(235,104,33)" rx="2" ry="2" />
<text  x="932.77" y="191.5" ></text>
</g>
<g >
<title>java.lang.Object#&lt;init&gt; (22 microseconds, 0.04%)</title><rect x="1179.2" y="117" width="0.4" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="1182.22" y="127.5" ></text>
</g>
<g >
<title>kotlin.jvm.internal.Intrinsics#checkNotNullExpressionValue (16 microseconds, 0.03%)</title><rect x="967.2" y="133" width="0.3" height="15.0" fill="rgb(245,143,44)" rx="2" ry="2" />
<text  x="970.24" y="143.5" ></text>
</g>
<g >
<title>com.github.mikephil.charting.data.Entry#&lt;init&gt; (58 microseconds, 0.09%)</title><rect x="39.3" y="213" width="1.1" height="15.0" fill="rgb(238,149,37)" rx="2" ry="2" />
<text  x="42.34" y="223.5" ></text>
</g>
<g >
<title>nl.tudelft.ipv8.keyvault.LibNaClSK#sign (1,972 microseconds, 3.14%)</title><rect x="1151.7" y="197" width="37.1" height="15.0" fill="rgb(244,152,43)" rx="2" ry="2" />
<text  x="1154.74" y="207.5" >nl...</text>
</g>
<g >
<title>java.lang.Class#getComponentType (53 microseconds, 0.08%)</title><rect x="394.1" y="149" width="1.0" height="15.0" fill="rgb(250,104,49)" rx="2" ry="2" />
<text  x="397.12" y="159.5" ></text>
</g>
<g >
<title>java.util.ArrayList#grow (194 microseconds, 0.31%)</title><rect x="409.0" y="181" width="3.7" height="15.0" fill="rgb(234,104,31)" rx="2" ry="2" />
<text  x="412.00" y="191.5" ></text>
</g>
<g >
<title>kotlin.jvm.internal.Intrinsics#checkNotNullParameter (13 microseconds, 0.02%)</title><rect x="1012.4" y="197" width="0.2" height="15.0" fill="rgb(240,143,38)" rx="2" ry="2" />
<text  x="1015.38" y="207.5" ></text>
</g>
<g >
<title>java.lang.Object#&lt;init&gt; (12 microseconds, 0.02%)</title><rect x="1050.5" y="133" width="0.2" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="1053.47" y="143.5" ></text>
</g>
<g >
<title>java.lang.Object#&lt;init&gt; (12 microseconds, 0.02%)</title><rect x="986.7" y="69" width="0.2" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="989.71" y="79.5" ></text>
</g>
<g >
<title>java.util.concurrent.atomic.AtomicLong#compareAndSet (8,125 microseconds, 12.95%)</title><rect x="720.6" y="165" width="152.8" height="15.0" fill="rgb(234,104,32)" rx="2" ry="2" />
<text  x="723.61" y="175.5" >java.util.concurren..</text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.pcollections.ConsPStack#&lt;init&gt; (48 microseconds, 0.08%)</title><rect x="992.9" y="117" width="0.9" height="15.0" fill="rgb(238,143,37)" rx="2" ry="2" />
<text  x="995.90" y="127.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.pcollections.ConsPStack#minus (505 microseconds, 0.80%)</title><rect x="982.9" y="133" width="9.5" height="15.0" fill="rgb(237,143,35)" rx="2" ry="2" />
<text  x="985.93" y="143.5" ></text>
</g>
<g >
<title>java.lang.ref.Reference#get (37 microseconds, 0.06%)</title><rect x="960.6" y="149" width="0.7" height="15.0" fill="rgb(237,104,35)" rx="2" ry="2" />
<text  x="963.64" y="159.5" ></text>
</g>
<g >
<title>nl.tudelft.trustchain.detoks.TransactionsFragment$$ExternalSyntheticLambda0#run (62,735 microseconds, 100.00%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(243,152,41)" rx="2" ry="2" />
<text  x="13.00" y="303.5" >nl.tudelft.trustchain.detoks.TransactionsFragment$$ExternalSyntheticLambda0#run</text>
</g>
<g >
<title>com.squareup.sqldelight.TransacterImpl#&lt;init&gt; (56 microseconds, 0.09%)</title><rect x="1049.8" y="149" width="1.1" height="15.0" fill="rgb(238,149,37)" rx="2" ry="2" />
<text  x="1052.83" y="159.5" ></text>
</g>
<g >
<title>java.nio.charset.Charset#name (624 microseconds, 0.99%)</title><rect x="1115.0" y="181" width="11.7" height="15.0" fill="rgb(241,104,40)" rx="2" ry="2" />
<text  x="1117.95" y="191.5" ></text>
</g>
<g >
<title>java.lang.Object#&lt;init&gt; (132 microseconds, 0.21%)</title><rect x="50.4" y="181" width="2.4" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="53.36" y="191.5" ></text>
</g>
<g >
<title>java.lang.Object#&lt;init&gt; (12 microseconds, 0.02%)</title><rect x="1005.3" y="53" width="0.2" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="1008.29" y="63.5" ></text>
</g>
<g >
<title>nl.tudelft.ipv8.keyvault.LibNaClPK#keyToBin (1,218 microseconds, 1.94%)</title><rect x="927.0" y="213" width="22.9" height="15.0" fill="rgb(244,152,43)" rx="2" ry="2" />
<text  x="929.97" y="223.5" >n..</text>
</g>
<g >
<title>java.util.concurrent.atomic.AtomicInteger#getAndAdd (11 microseconds, 0.02%)</title><rect x="312.2" y="133" width="0.2" height="15.0" fill="rgb(250,104,49)" rx="2" ry="2" />
<text  x="315.15" y="143.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.pcollections.MapEntry#&lt;init&gt; (40 microseconds, 0.06%)</title><rect x="1010.0" y="133" width="0.7" height="15.0" fill="rgb(238,143,37)" rx="2" ry="2" />
<text  x="1013.00" y="143.5" ></text>
</g>
<g >
<title>java.util.ArrayList#&lt;init&gt; (168 microseconds, 0.27%)</title><rect x="405.0" y="213" width="3.1" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="407.98" y="223.5" ></text>
</g>
<g >
<title>androidx.fragment.app.Fragment#getContext (41 microseconds, 0.07%)</title><rect x="14.6" y="229" width="0.8" height="15.0" fill="rgb(230,161,27)" rx="2" ry="2" />
<text  x="17.63" y="239.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.pcollections.HashPMap#getEntries (418 microseconds, 0.67%)</title><rect x="1019.4" y="133" width="7.9" height="15.0" fill="rgb(237,143,36)" rx="2" ry="2" />
<text  x="1022.44" y="143.5" ></text>
</g>
<g >
<title>java.util.ArrayList#grow (172 microseconds, 0.27%)</title><rect x="409.4" y="165" width="3.3" height="15.0" fill="rgb(234,104,31)" rx="2" ry="2" />
<text  x="412.41" y="175.5" ></text>
</g>
<g >
<title>nl.tudelft.trustchain.detoks.TransactionsFragment#$r8$lambda$GVU6wJeOjuTm8h1yg1-OokmLDZM (62,735 microseconds, 100.00%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(235,152,33)" rx="2" ry="2" />
<text  x="13.00" y="287.5" >nl.tudelft.trustchain.detoks.TransactionsFragment#$r8$lambda$GVU6wJeOjuTm8h1yg1-OokmLDZM</text>
</g>
<g >
<title>kotlin.jvm.internal.Intrinsics#checkNotNullParameter (27 microseconds, 0.04%)</title><rect x="923.8" y="213" width="0.5" height="15.0" fill="rgb(240,143,38)" rx="2" ry="2" />
<text  x="926.77" y="223.5" ></text>
</g>
<g >
<title>kotlin.jvm.internal.Intrinsics#checkNotNullParameter (12 microseconds, 0.02%)</title><rect x="1033.7" y="133" width="0.3" height="15.0" fill="rgb(240,143,38)" rx="2" ry="2" />
<text  x="1036.73" y="143.5" ></text>
</g>
<g >
<title>java.lang.reflect.Array#newInstance (85 microseconds, 0.14%)</title><rect x="395.6" y="149" width="1.6" height="15.0" fill="rgb(251,104,51)" rx="2" ry="2" />
<text  x="398.55" y="159.5" ></text>
</g>
<g >
<title>java.lang.ref.Reference#&lt;init&gt; (67 microseconds, 0.11%)</title><rect x="1181.9" y="101" width="1.2" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="1184.86" y="111.5" ></text>
</g>
<g >
<title>java.lang.Object#&lt;init&gt; (10 microseconds, 0.02%)</title><rect x="309.8" y="85" width="0.2" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="312.76" y="95.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.pcollections.IntTree#&lt;init&gt; (38 microseconds, 0.06%)</title><rect x="1004.8" y="69" width="0.7" height="15.0" fill="rgb(238,143,37)" rx="2" ry="2" />
<text  x="1007.80" y="79.5" ></text>
</g>
<g >
<title>java.lang.reflect.Array#createObjectArray (10 microseconds, 0.02%)</title><rect x="397.0" y="117" width="0.2" height="15.0" fill="rgb(239,104,37)" rx="2" ry="2" />
<text  x="399.96" y="127.5" ></text>
</g>
<g >
<title>androidx.sqlite.db.SupportSQLiteOpenHelper$Callback#&lt;init&gt; (35 microseconds, 0.06%)</title><rect x="374.7" y="165" width="0.7" height="15.0" fill="rgb(238,161,37)" rx="2" ry="2" />
<text  x="377.69" y="175.5" ></text>
</g>
<g >
<title>java.util.Random#next (16,992 microseconds, 27.09%)</title><rect x="601.4" y="181" width="319.6" height="15.0" fill="rgb(230,104,27)" rx="2" ry="2" />
<text  x="604.42" y="191.5" >java.util.Random#next</text>
</g>
<g >
<title>nl.tudelft.ipv8.Peer#getKey (12 microseconds, 0.02%)</title><rect x="924.5" y="213" width="0.2" height="15.0" fill="rgb(248,152,48)" rx="2" ry="2" />
<text  x="927.51" y="223.5" ></text>
</g>
<g >
<title>com.squareup.sqldelight.android.AndroidSqliteDriver#&lt;init&gt; (16,991 microseconds, 27.08%)</title><rect x="52.8" y="197" width="319.6" height="15.0" fill="rgb(238,149,37)" rx="2" ry="2" />
<text  x="55.85" y="207.5" >com.squareup.sqldelight.android.AndroidSqli..</text>
</g>
<g >
<title>nl.tudelft.ipv8.sqldelight.ipv8.DatabaseImpl#&lt;init&gt; (4,209 microseconds, 6.71%)</title><rect x="1028.5" y="181" width="79.2" height="15.0" fill="rgb(238,152,37)" rx="2" ry="2" />
<text  x="1031.50" y="191.5" >nl.tudelf..</text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.KClassCacheKt#getOrCreateKotlinClass (735 microseconds, 1.17%)</title><rect x="1013.5" y="165" width="13.8" height="15.0" fill="rgb(240,143,38)" rx="2" ry="2" />
<text  x="1016.47" y="175.5" ></text>
</g>
<g >
<title>kotlin.jvm.internal.Intrinsics#checkNotNullParameter (11 microseconds, 0.02%)</title><rect x="371.1" y="117" width="0.2" height="15.0" fill="rgb(240,143,38)" rx="2" ry="2" />
<text  x="374.14" y="127.5" ></text>
</g>
<g >
<title>java.lang.ref.ReferenceQueue#poll (23 microseconds, 0.04%)</title><rect x="1176.6" y="101" width="0.5" height="15.0" fill="rgb(229,104,26)" rx="2" ry="2" />
<text  x="1179.63" y="111.5" ></text>
</g>
<g >
<title>dalvik.system.VMDebug#startMethodTracingFilename (140 microseconds, 0.22%)</title><rect x="11.2" y="197" width="2.7" height="15.0" fill="rgb(241,184,40)" rx="2" ry="2" />
<text  x="14.24" y="207.5" ></text>
</g>
<g >
<title>java.lang.String#length (22 microseconds, 0.04%)</title><rect x="1114.5" y="181" width="0.5" height="15.0" fill="rgb(236,104,34)" rx="2" ry="2" />
<text  x="1117.54" y="191.5" ></text>
</g>
<g >
<title>java.lang.Object#&lt;init&gt; (11 microseconds, 0.02%)</title><rect x="65.4" y="133" width="0.3" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="68.45" y="143.5" ></text>
</g>
<g >
<title>java.lang.System#arraycopy (268 microseconds, 0.43%)</title><rect x="937.9" y="165" width="5.1" height="15.0" fill="rgb(248,104,48)" rx="2" ry="2" />
<text  x="940.92" y="175.5" ></text>
</g>
<g >
<title>com.sun.jna.Memory#access$000 (46 microseconds, 0.07%)</title><rect x="1170.2" y="101" width="0.9" height="15.0" fill="rgb(236,149,34)" rx="2" ry="2" />
<text  x="1173.19" y="111.5" ></text>
</g>
<g >
<title>kotlin.jvm.internal.Intrinsics#checkNotNullParameter (10 microseconds, 0.02%)</title><rect x="1050.7" y="133" width="0.2" height="15.0" fill="rgb(240,143,38)" rx="2" ry="2" />
<text  x="1053.70" y="143.5" ></text>
</g>
<g >
<title>com.squareup.sqldelight.android.AndroidSqliteDriver#&lt;init&gt; (16,571 microseconds, 26.41%)</title><rect x="59.9" y="181" width="311.7" height="15.0" fill="rgb(238,149,37)" rx="2" ry="2" />
<text  x="62.88" y="191.5" >com.squareup.sqldelight.android.AndroidSql..</text>
</g>
<g >
<title>java.lang.Character#digit (40 microseconds, 0.06%)</title><rect x="25.6" y="197" width="0.7" height="15.0" fill="rgb(233,104,30)" rx="2" ry="2" />
<text  x="28.59" y="207.5" ></text>
</g>
<g >
<title>kotlin.jvm.internal.Intrinsics#checkNotNullParameter (26 microseconds, 0.04%)</title><rect x="1043.6" y="149" width="0.5" height="15.0" fill="rgb(240,143,38)" rx="2" ry="2" />
<text  x="1046.59" y="159.5" ></text>
</g>
<g >
<title>java.lang.Object#&lt;init&gt; (18 microseconds, 0.03%)</title><rect x="1189.5" y="197" width="0.3" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="1192.45" y="207.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.ReflectionFactoryImpl#getOrCreateKotlinClass (2,957 microseconds, 4.71%)</title><rect x="955.1" y="181" width="55.6" height="15.0" fill="rgb(240,143,38)" rx="2" ry="2" />
<text  x="958.13" y="191.5" >kotli..</text>
</g>
<g >
<title>java.lang.ref.WeakReference#&lt;init&gt; (113 microseconds, 0.18%)</title><rect x="1174.5" y="85" width="2.1" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="1177.50" y="95.5" ></text>
</g>
<g >
<title>com.squareup.sqldelight.internal.FunctionsJvmKt#copyOnWriteList (2,996 microseconds, 4.78%)</title><rect x="1050.9" y="149" width="56.3" height="15.0" fill="rgb(232,149,30)" rx="2" ry="2" />
<text  x="1053.89" y="159.5" >com.s..</text>
</g>
<g >
<title>java.lang.Object#getClass (11 microseconds, 0.02%)</title><rect x="411.4" y="133" width="0.2" height="15.0" fill="rgb(240,104,38)" rx="2" ry="2" />
<text  x="414.37" y="143.5" ></text>
</g>
<g >
<title>com.github.mikephil.charting.data.BaseEntry#&lt;init&gt; (35 microseconds, 0.06%)</title><rect x="39.8" y="197" width="0.6" height="15.0" fill="rgb(238,149,37)" rx="2" ry="2" />
<text  x="42.78" y="207.5" ></text>
</g>
<g >
<title>java.lang.String#equals (44 microseconds, 0.07%)</title><rect x="922.7" y="197" width="0.9" height="15.0" fill="rgb(235,104,33)" rx="2" ry="2" />
<text  x="925.74" y="207.5" ></text>
</g>
<g >
<title>com.goterl.lazysodium.LazySodium#successful (22 microseconds, 0.04%)</title><rect x="1155.6" y="165" width="0.4" height="15.0" fill="rgb(229,149,26)" rx="2" ry="2" />
<text  x="1158.58" y="175.5" ></text>
</g>
<g >
<title>com.squareup.sqldelight.android.AndroidSqliteDriver$statements$1#&lt;init&gt; (13,026 microseconds, 20.76%)</title><rect x="65.7" y="165" width="245.0" height="15.0" fill="rgb(238,149,37)" rx="2" ry="2" />
<text  x="68.66" y="175.5" >com.squareup.sqldelight.android...</text>
</g>
<g >
<title>java.util.HashMap#&lt;init&gt; (12,934 microseconds, 20.62%)</title><rect x="67.4" y="117" width="243.3" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="70.39" y="127.5" >java.util.HashMap#&lt;init&gt;</text>
</g>
<g >
<title>java.lang.Object#&lt;init&gt; (18 microseconds, 0.03%)</title><rect x="963.5" y="101" width="0.3" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="966.48" y="111.5" ></text>
</g>
<g >
<title>com.sun.jna.ptr.PointerByReference#&lt;init&gt; (1,532 microseconds, 2.44%)</title><rect x="1159.6" y="165" width="28.8" height="15.0" fill="rgb(238,149,37)" rx="2" ry="2" />
<text  x="1162.60" y="175.5" >co..</text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.pcollections.IntTree#get (40 microseconds, 0.06%)</title><rect x="975.9" y="85" width="0.7" height="15.0" fill="rgb(237,143,35)" rx="2" ry="2" />
<text  x="978.88" y="95.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.pcollections.IntTree#&lt;init&gt; (37 microseconds, 0.06%)</title><rect x="1006.5" y="53" width="0.7" height="15.0" fill="rgb(238,143,37)" rx="2" ry="2" />
<text  x="1009.46" y="63.5" ></text>
</g>
<g >
<title>nl.tudelft.trustchain.detoks.TransactionsFragment#runBenchmarkWithType$lambda-14$lambda-13 (62,735 microseconds, 100.00%)</title><rect x="10.0" y="261" width="1180.0" height="15.0" fill="rgb(241,152,40)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >nl.tudelft.trustchain.detoks.TransactionsFragment#runBenchmarkWithType$lambda-14$lambda-13</text>
</g>
<g >
<title>java.lang.Object#&lt;init&gt; (11 microseconds, 0.02%)</title><rect x="1033.5" y="133" width="0.2" height="15.0" fill="rgb(238,104,37)" rx="2" ry="2" />
<text  x="1036.53" y="143.5" ></text>
</g>
<g >
<title>androidx.sqlite.db.framework.FrameworkSQLiteOpenHelperFactory#&lt;init&gt; (191 microseconds, 0.30%)</title><rect x="49.3" y="197" width="3.5" height="15.0" fill="rgb(238,161,37)" rx="2" ry="2" />
<text  x="52.25" y="207.5" ></text>
</g>
<g >
<title>java.util.Arrays#copyOf (1,124 microseconds, 1.79%)</title><rect x="376.0" y="181" width="21.2" height="15.0" fill="rgb(248,104,47)" rx="2" ry="2" />
<text  x="379.01" y="191.5" ></text>
</g>
<g >
<title>java.lang.reflect.Array#newArray (58 microseconds, 0.09%)</title><rect x="396.1" y="133" width="1.1" height="15.0" fill="rgb(239,104,37)" rx="2" ry="2" />
<text  x="399.06" y="143.5" ></text>
</g>
<g >
<title>kotlin.reflect.jvm.internal.pcollections.IntTreePMap#get (111 microseconds, 0.18%)</title><rect x="998.8" y="117" width="2.1" height="15.0" fill="rgb(237,143,35)" rx="2" ry="2" />
<text  x="1001.84" y="127.5" ></text>
</g>
</g>
</svg>
